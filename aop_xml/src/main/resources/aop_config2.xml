<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd">
		
		<!-- 어노테이션 사용 안하는 경우 객체 생성 -->
		<!-- <bean id="product" class="com.company.aop.Product"/> -->
		
		<!-- @Component, @Service, @Controller, @Repository -->
		<context:component-scan base-package="com.company.aop"/>

		<!-- AOP XML 설정 -->
		<aop:config>
			<aop:aspect ref="log">
				<!-- AOP를 적용 할 기준 명시 -->
				<aop:pointcut expression="execution(* com.company.aop.Product.getInfo())" id="pointcut"/>
				
				<!-- Advice를 할 메소드 명시 -->
				<!-- <aop:before method="beforeLog" pointcut-ref="pointcut"/> -->
				<!-- <aop:after method="afterLog" pointcut-ref="pointcut"/> -->
				<!-- <aop:after-returning method="afterRetrunLog" pointcut-ref="pointcut"/>
				<aop:after-throwing method="afterThrowLog" pointcut-ref="pointcut"/> -->
				
				<aop:around method="aroundLog" pointcut-ref="pointcut"/>
				
			</aop:aspect>
		
		</aop:config>

</beans>